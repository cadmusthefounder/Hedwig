// Place all the behaviors and hooks related to the matching controller here.
// All this logic will automatically be available in application.js.

<% environment.context_class.instance_eval { include Rails.application.routes.url_helpers } %>

// This closure exports two values to the global scope:
// AccountKit_OnInteractive: This is a function that will be called by
//                           AccountKit to initialize itself.
// AccountKitLogin: This is a function that can be called globally to prompt the
//                  user to login.
(function(window) {
  var deferredCSRF = $.Deferred();
  var csrfPromise = deferredCSRF.promise();

  $(document).on('turbolinks:load', function() {
    var formAuthenticityToken = $('meta[name=csrf-token]').attr('content');
    deferredCSRF.resolve(formAuthenticityToken);
  });

  var deferredAccountKit = $.Deferred();
  var accountKitPromise = deferredAccountKit.promise();

  function AccountKit_OnInteractive() {
    csrfPromise.then(function(formAuthenticityToken) {
      AccountKit.init(
        {
          appId: "<%= AccountKit.app_id %>",
          state: formAuthenticityToken,
          version: "v1.0"
        }
      );

      deferredAccountKit.resolve();
    });
  }

  function AccountKitCallback(response) {
    if (response.status === "PARTIALLY_AUTHENTICATED") {
      var form = document.createElement("form");
      form.action = "<%= sessions_path %>";
      form.method = "POST";
      form.style.display = "none";
      document.body.appendChild(form);

      var authenticityTokenInput = document.createElement("input");
      authenticityTokenInput.name = "authenticity_token";
      authenticityTokenInput.value = response.state;
      form.appendChild(authenticityTokenInput);

      var codeInput = document.createElement("input");
      codeInput.name = "code";
      codeInput.value = response.code;
      form.appendChild(codeInput);

      $(form).submit();
    } else {
      // TODO error handling
    }
  }

  function AccountKitLogin(emailAddress) {
    if (!emailAddress) {
      emailAddress = "";
    }

    accountKitPromise.then(function() {
      AccountKit.login('EMAIL', {emailAddress: emailAddress}, AccountKitCallback);
    });
  }

  window.AccountKit_OnInteractive = AccountKit_OnInteractive;
  window.AccountKitLogin = AccountKitLogin;
  window.csrfToken = csrfPromise;
})(window);

$(document).on('turbolinks:load', function() {
  $('.login-button').click(function(event) {
    event.preventDefault();
    AccountKitLogin();
  });
});
